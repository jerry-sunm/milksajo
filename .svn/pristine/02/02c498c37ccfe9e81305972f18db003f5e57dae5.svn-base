package com.milk.mg;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Date;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.milk.dao.OrderDAO;
import com.milk.dao.ProductDAO;
import com.milk.dao.UserDAO;
import com.milk.dto.OrderDTO;
import com.milk.dto.ProductDTO;
import com.milk.dto.UserDTO;

import oracle.net.aso.a;

/**
 * Servlet implementation class GetData
 */
@WebServlet("/getdatamg")
public class GetData extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.sendError(HttpServletResponse.SC_BAD_REQUEST);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		HttpSession session = request.getSession();
		request.setCharacterEncoding("utf-8");
		response.setContentType("text/json; charset=utf-8"); 
		PrintWriter out = response.getWriter();
		
		// 비정상적인 요청에 대한 처리 / 로그인 상태가 아닌경우
		if(session.getAttribute("login") == null) {
			out.print("error");
			return;
		}
		String type = request.getParameter("type");
		
		// user데이터 요청에 대한 처리
		if(type.equals("user")) {
			// 결과값을 저장하는 인스턴스
			String result = "";
			StringBuffer buf = new StringBuffer();
			
			List<UserDTO> userList = UserDAO.getDAO().selectAllUser();
			
			int age = 0;
			
			buf.append("[");
			for(UserDTO user : userList) {
				age = (new Date().getYear()+1900) - Integer.parseInt(user.getuBirthday().substring(0, 4));
				/*{
					id:"",
					name:"",
					age: "",
					tel: "",
					email: "",
					addr: "",
					status: "",
					joindate: "",
					lastlogin: "",
					birthday: ""
				}*/
				buf.append("{");
				buf.append("\"id\": \"" + user.getuUserId()+"\",");
				buf.append("\"name\": \"" + user.getuName()+"\",");
				buf.append("\"age\": \"" + age + "\",");
				buf.append("\"tel\": \"" + user.getuTel()+"\",");
				buf.append("\"email\": \"" + user.getuEmail()+"\",");
				buf.append("\"addr\": \"" + user.getuAddress()+"\",");
				buf.append("\"status\": \"" + user.getuState()+"\",");
				buf.append("\"joindate\": \"" + user.getuJoinDate().substring(0,10)+"\",");
				buf.append("\"lastlogin\": \"" + user.getuLastLogin().substring(0,10)+"\",");
				buf.append("\"birthday\": \"" + user.getuBirthday().substring(0,10)+"\"");
				buf.append("},");
			}
			
			int c = buf.length();
			buf.replace(c-1, c, "]");
			out.print(buf.toString());
			return;
		}
		
		// product 데이터 요청에 대한 처리
		if(type.equals("product")) {
			// 결과값을 저장하는 인스턴스
			String result = "";
			StringBuffer buf = new StringBuffer();
			
			List<ProductDTO> productList = ProductDAO.getDAO().selectAllProduct();
			
			buf.append("[");
			for(ProductDTO product : productList) {
				String serialNo = changeSerial(product.getpSerialNo());
				/*{
					serial:"",
					div:"",
					name: "",
					origin: "",
					size: "",
					price: "",
					amount: "",
					sales: ""
				}*/
				buf.append("{");
				buf.append("\"serial\": \"" + serialNo+"\",");
				buf.append("\"div\": \"" + product.getpDivision()+"\",");
				buf.append("\"name\": \"" + product.getpName()+"\",");
				buf.append("\"origin\": \"" + product.getpOrigin()+"\",");
				buf.append("\"size\": \"" + product.getpSize()+"\",");
				buf.append("\"price\": \"" + product.getpPrice()+"\",");
				buf.append("\"amount\": \"" + product.getpAmount()+"\",");
				buf.append("\"sales\": \"" + product.getpSaleAmount()+"\"");
				buf.append("},");
			}
			int c = buf.length();
			buf.replace(c-1, c, "]");
			out.print(buf.toString());
			return;
		}
		
		// order 데이터 요청에 대한 처리 // 미완성
		if(type.equals("order")) {
			// 결과값을 저장하는 인스턴스
			String result = "";
			StringBuffer buf = new StringBuffer();
			
			List<OrderDTO> orderList = OrderDAO.getDAO().selectAllOrder();
			
			buf.append("[");
			for(OrderDTO order : orderList) {
				/*{
					no:"",
					serial:"",
					amount: "",
					price: "",
					deposit: "",
					refund: "",
					state: "",
					user: "",
				}*/
				buf.append("{");
				buf.append("\"no\": \"" + order.getOrderNo()+"\",");
				buf.append("\"serial\": \"" + order.getSerialNo()+"\",");
				buf.append("\"amount\": \"" + order.getAmount()+"\",");
				buf.append("\"price\": \"" + order.getPrice()+"\",");
				buf.append("\"deposit\": \"" + order.getDeposit()+"\",");
				buf.append("\"refund\": \"" + order.getRefund()+"\",");
				buf.append("\"state\": \"" + order.getState()+"\",");
				buf.append("\"user\": \"" + order.getUserId()+"\"");
				buf.append("},");
			}
			int c = buf.length();
			buf.replace(c-1, c, "]");
			out.print(buf.toString());
			return;
		}
	}
	
	// 숫자형 시리얼번호를 4자리 문자형으로 변환 하는 메소드
	public static String changeSerial(int serial) {
		String serialNo = "0000";
		
		if(serial > 0 && serial < 9) {
			serialNo = "000"+serial;
		}else if(serial > 10 && serial < 99){
			serialNo = "00"+serial;
		}else if(serial > 100 && serial < 999){
			serialNo = "0"+serial;
		}else {
			serialNo = ""+serial;
		}
		
		return serialNo;
	}
}
